var searchIndex = JSON.parse('{\
"cargo_reaper":{"doc":"","t":"DENLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLMM","n":["CStringValueParser","Cmd","Reaper","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","into","into","into_resettable","main","parse","parse_ref","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","args","program"],"q":[[0,"cargo_reaper"],[34,"cargo_reaper::Cmd"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,3,3,3,3,2,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,0,2,2,2,3,2,3,2,3,2,3,3,19,19],"f":[0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[3,4],5],[[]],[[]],[6,[[8,[3,7]]]],[6,[[8,[3,7]]]],[9,10],[[]],[[]],[[],[[12,[11]]]],[[],13],[[2,1,[15,[14]],16],[[8,[7]]]],[[2,1,[15,[14]],17],[[8,[7]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],18],[[],18],[[3,6],[[8,[7]]]],[[3,6],[[8,[7]]]],0,0],"c":[],"p":[[3,"Command"],[3,"CStringValueParser"],[4,"Cmd"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[15,"str"],[15,"bool"],[3,"ValueParser"],[4,"Resettable"],[6,"Result"],[3,"Arg"],[4,"Option"],[3,"OsString"],[3,"OsStr"],[3,"TypeId"],[13,"Reaper"]]},\
"grim_reaper":{"doc":"","t":"DDMLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLLL","n":["CStringValueParser","GrimReaper","args","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into_resettable","main","parse","parse_ref","program","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"grim_reaper"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,3,3,3,3,2,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,0,2,2,3,2,3,2,3,2,3,2,3,3],"f":[0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[2,2],[[]],[[],1],[[],1],[[3,4],5],[[]],[[]],[6,[[8,[3,7]]]],[6,[[8,[3,7]]]],[[],[[10,[9]]]],[[]],[[]],[[],[[12,[11]]]],[[],13],[[2,1,[10,[14]],15],[[8,[7]]]],[[2,1,[10,[14]],16],[[8,[7]]]],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[3,6],[[8,[7]]]],[[3,6],[[8,[7]]]]],"c":[],"p":[[3,"Command"],[3,"CStringValueParser"],[3,"GrimReaper"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"ValueParser"],[4,"Resettable"],[6,"Result"],[3,"Arg"],[3,"OsString"],[3,"OsStr"],[3,"TypeId"]]},\
"lib_grim_reaper":{"doc":"","t":"F","n":["exec_reaper"],"q":[[0,"lib_grim_reaper"]],"d":["Errors"],"i":[0],"f":[[1,2]],"c":[],"p":[[3,"CString"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
