var searchIndex = JSON.parse('{\
"cargo_reaper":{"doc":"","t":"DENLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLMM","n":["CStringValueParser","Cmd","Reaper","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","into","into","into_resettable","main","parse","parse_ref","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","args","program"],"q":[[0,"cargo_reaper"],[34,"cargo_reaper::Cmd"],[36,"clap_builder::builder::command"],[37,"core::fmt"],[38,"core::fmt"],[39,"clap_builder"],[40,"core::result"],[41,"clap_builder::builder::value_parser"],[42,"clap_builder::builder::resettable"],[43,"anyhow"],[44,"clap_builder::builder::arg"],[45,"core::option"],[46,"std::ffi::os_str"],[47,"std::ffi::os_str"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,4,2,4,2,2,2,4,4,4,4,2,4,4,4,4,2,2,0,2,2,2,4,2,4,2,4,2,4,4,20,20],"f":[0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],[[4,5],6],[-1,-1,[]],[-1,-1,[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[12]]],[]],[[],[[14,[3]]]],[[2,1,[16,[15]],17],[[9,[8]]]],[[2,1,[16,[15]],18],[[9,[8]]]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[[4,7],[[9,[3,8]]]],[[4,7],[[9,[3,8]]]],0,0],"c":[],"p":[[3,"Command",36],[3,"CStringValueParser",0],[15,"tuple"],[4,"Cmd",0],[3,"Formatter",37],[6,"Result",37],[3,"ArgMatches",38],[6,"Error",39],[4,"Result",40],[15,"str"],[15,"bool"],[3,"ValueParser",41],[4,"Resettable",42],[6,"Result",43],[3,"Arg",44],[4,"Option",45],[3,"OsString",46],[3,"OsStr",46],[3,"TypeId",47],[13,"Reaper",34]],"b":[]},\
"grim_reaper":{"doc":"","t":"DDMLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLLL","n":["CStringValueParser","GrimReaper","args","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","into_resettable","main","parse","parse_ref","program","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut"],"q":[[0,"grim_reaper"],[35,"clap_builder::builder::command"],[36,"core::fmt"],[37,"core::fmt"],[38,"clap_builder"],[39,"core::result"],[40,"clap_builder::util::id"],[41,"core::option"],[42,"clap_builder::builder::value_parser"],[43,"clap_builder::builder::resettable"],[44,"anyhow"],[45,"clap_builder::builder::arg"],[46,"std::ffi::os_str"],[47,"std::ffi::os_str"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,4,4,4,4,2,4,2,2,2,4,4,4,4,2,4,4,4,4,2,2,0,2,2,4,2,4,2,4,2,4,2,4,4],"f":[0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[],1],[[],1],[[4,5],6],[-1,-1,[]],[-1,-1,[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[[],[[11,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[12]]],[]],[[],[[14,[3]]]],[[2,1,[11,[15]],16],[[9,[8]]]],[[2,1,[11,[15]],17],[[9,[8]]]],0,[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[[4,7],[[9,[3,8]]]],[[4,7],[[9,[3,8]]]]],"c":[],"p":[[3,"Command",35],[3,"CStringValueParser",0],[15,"tuple"],[3,"GrimReaper",0],[3,"Formatter",36],[6,"Result",36],[3,"ArgMatches",37],[6,"Error",38],[4,"Result",39],[3,"Id",40],[4,"Option",41],[3,"ValueParser",42],[4,"Resettable",43],[6,"Result",44],[3,"Arg",45],[3,"OsString",46],[3,"OsStr",46],[3,"TypeId",47]],"b":[]},\
"lib_grim_reaper":{"doc":"","t":"F","n":["exec_reaper"],"q":[[0,"lib_grim_reaper"],[1,"alloc::ffi::c_str"],[2,"anyhow"]],"d":["Errors"],"i":[0],"f":[[[1,[2,[1]]],[[4,[3]]]]],"c":[],"p":[[3,"CString",1],[15,"slice"],[15,"tuple"],[6,"Result",2]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
